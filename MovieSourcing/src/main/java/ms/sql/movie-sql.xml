<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<comment>movie-sql.xml</comment>
	
	<!-- 댓글 목록 조회 -->
	<entry key="movieInfo">
		SELECT * FROM MOVIE_INFORMATION_TABLE WHERE MOVIE_NO = ?
	</entry>
	
	<!--  피디 조회 -->
	<entry key="pdSelect">
		SELECT PD_NAME, PD_PICTURE, PD_NO FROM PD
		JOIN PD_MOVIE USING(PD_NO)
		JOIN MOVIE_INFORMATION_TABLE mit USING(MOVIE_NO)
		WHERE MOVIE_NO = ?
	</entry>
	
	<!-- 배우 조회 -->
	<entry key="actSelect">
		SELECT ACTOR_NAME, ACTOR_PICTURE, ACTOR_NO FROM ACTOR
		JOIN ACTOR_MOVIE USING(ACTOR_NO)
		JOIN MOVIE_INFORMATION_TABLE mit USING(MOVIE_NO)
		WHERE MOVIE_NO = ?
	</entry>	
	
	<!-- 장르 조회 -->
	<entry key="genreSelect">
		SELECT GENRE FROM GENRE 
		JOIN GENRE_MOVIE USING(GENRE_NO)
		JOIN MOVIE_INFORMATION_TABLE mit USING(MOVIE_NO)
		WHERE MOVIE_NO = ?
	</entry>	
	
	<!-- 리뷰 조회 -->
	<entry key="movieReview">
		SELECT MOVIE_NO, MEM_NO, REVIEW_CONTENT, TO_CHAR(REVIEW_DATE, 'YYYY-MM-DD') AS REVIEW_DATE_CHAR, REVIEW_SCORE,
		MEM_IMG, MEM_NICK
		FROM REVIEW
		JOIN MEMBER USING (MEM_NO)
		WHERE MOVIE_NO = ?
		ORDER BY REVIEW_DATE DESC 
	</entry>
	
	
	<!-- 추천영화 조회 -->
	<entry key="movieRecommend1">
		SELECT MOVIE_NO, MOVIE_POSTER FROM MOVIE_INFORMATION_TABLE
		JOIN GENRE_MOVIE USING (MOVIE_NO)
		JOIN GENRE USING (GENRE_NO)
		WHERE GENRE = ?
	</entry>
	
	<entry key="movieRecommend2">
		SELECT MOVIE_NO, MOVIE_POSTER FROM MOVIE_INFORMATION_TABLE
		JOIN GENRE_MOVIE USING (MOVIE_NO)
		JOIN GENRE USING (GENRE_NO)
		WHERE GENRE IN (?, ?)
	</entry>
	
	<entry key="movieRecommend3">
		SELECT MOVIE_NO, MOVIE_POSTER FROM MOVIE_INFORMATION_TABLE
		JOIN GENRE_MOVIE USING (MOVIE_NO)
		JOIN GENRE USING (GENRE_NO)
		WHERE GENRE IN (?, ?, ?)
	</entry>
	
	
	<!-- 로그인 회원의 본영화 체크 -->
	<entry key="watchedMovie">
		SELECT COUNT(*) FROM WATCHED_MOVIE
		WHERE MEM_NO = ?
		AND MOVIE_NO = ?
	</entry>
	
	<!-- 로그인 회원의 찜영화 체크 -->
	<entry key="wannaMovie">
		SELECT COUNT(*) FROM SELECT_MOVIE
		WHERE MEM_NO = ?
		AND MOVIE_NO = ?
	</entry>
	
	<!-- 로그인 회원의 인생영화 체크 -->
	<entry key="lifeMovie">
		SELECT COUNT(*) FROM LIFE_MOVIE
		WHERE MEM_NO = ?
		AND MOVIE_NO = ?
	</entry>
	
	<!-- 영화정보창 리뷰 삽입 -->
	<entry key="movieReviewInsert">
		INSERT INTO REVIEW 
		VALUES(?, ?, ?, DEFAULT, ?)
	</entry>
	
	<!-- 영화정보창 리뷰 수정 -->
	<entry key="movieReviewUpdate">
		UPDATE REVIEW SET REVIEW_CONTENT = ?
		WHERE MOVIE_NO = ?
		AND MEM_NO = ?
	</entry>	
	
	<!-- 영화정보창 리뷰 삭제 -->
	<entry key="movieReviewDelete">
		DELETE FROM REVIEW 
		WHERE MOVIE_NO = ?
		AND MEM_NO = ?
	</entry>
	
	
	
	<!-- 영화 리뷰 더보기 리스트 -->
	<entry key="movieReviewList">
		SELECT MEM_NO, REVIEW_CONTENT , TO_CHAR(REVIEW_DATE, 'YYYY-MM-DD') AS REVIEW_DATE_CHAR , 
		MOVIE_TITLE, REVIEW_SCORE , MEM_IMG , MEM_NICK
		FROM REVIEW 
		JOIN MOVIE_INFORMATION_TABLE USING (MOVIE_NO)
		JOIN "MEMBER" USING (MEM_NO)
		WHERE MOVIE_NO = ?
		ORDER BY REVIEW_DATE DESC
	</entry>
	
	
	
	
	
	
	
	
	
	
	
</properties>
